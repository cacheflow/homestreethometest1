<style>
	
	.rotate {

			/* Safari */
			-webkit-transform: rotate(-90deg);

			/* Firefox */
			-moz-transform: rotate(-90deg);

			/* IE */
			-ms-transform: rotate(-90deg);

			/* Opera */
			-o-transform: rotate(-90deg);

			/* Internet Explorer */
			filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);

			}
			.chart div {
				  font: 15px sans-serif;
				  text-align: left;
				  padding: 3px;
				  margin: 1px;
				  color: black;
			}
			.arc path {
  				stroke: #fff;
			}
			svg {
				margin-left: 30%;
			}


</style>

<div ng-app="resident-app" class="container">


  <div ng-controller="ResidentCtrl">

 <button type="button" class="btn btn-lg btn-info" data-template="/aside.html" data-placement="left" bs-aside="aside" data-container="body">Dashboard
    </button>
    <button type="button" class="btn btn-lg btn-success" onclick="populateit()">Visualize Data</button>
<br></br>

<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">By the Numbers</h3>
  </div>
  <div class="panel-body">
   <div class="row">
  		<div class="col-md-4 text-center">
  			<span class="glyphicon glyphicon-user"></span>  {{residents.length}} <br>
  			Total Residents
  		</div>
  		<div class="col-md-4 text-center">
  			<span class="glyphicon glyphicon-user"></span>  ${{avgdonation(residents) | number: 2}} <br>
  			Average Donations numdon	
  		</div>
  		<div class="col-md-4 text-center">
  			<span class="glyphicon glyphicon-user"></span>  {{avgstatuses(residents) | number: 2}} <br>
  			Average Number of Statuses
  		</div>
	</div>
  </div>
</div>
	<h2> Most Updates </h2>
<div ng-repeat="resident in residents | orderBy : numstatuses | limitTo: 5">
	<h4>{{resident.name}} : {{resident.statuses.length}}<h4>
</div>	

	<h2> Most Amount of Money Raised </h2>
<div ng-repeat="resident in residents | orderBy:calcrevTotal | limitTo: 5">
	<h4>{{resident.name}} : ${{calcTotal(resident)}}</h4>
</div>


    <h2> Most Donations </h2>
<div ng-repeat="resident in residents | orderBy : numdonations | limitTo : 5">
	<strong>{{resident.name}}</strong><div class = donbox></div>
</div>


  </div>
</div>

		<script>
		function populateit(){

		d3.json("metrics.json", function(error, json) {
			var numdon = [];
			var somenum = [];
			var resnames = [];
			resdata = json;
	
			for (i=0; i<resdata.length; i++){
				if(resdata[i].donations.length== null){
					resdata[i].donations.length== 0;
				}

			resnames.push(resdata[i].name);
			numdon.push(resdata[i].donations.length);
			
			};
	
			applyD3Selectors(numdon);
			applyD32Selectors(somenum);
			
			piechart(numdon, resnames);
			
		});
		function applyD32Selectors(x){
				// Put D3 magic here
				var numdon = x;
				
			d3.selectAll(".statbox")
			    .data(numdon)
			    .style("height", "30px").style("margin", 0).style("padding", 0).transition()
			    .style("background-color", function(d) {
			  		return "hsl(" + d*10 + ",100%,50%)";
				})
				.text(function(d) {
        			return d;
   				})
			    .style("width", function(d, i) { return (d)*50 + "px"; });
			};

		
		function applyD3Selectors(x){
				// Put D3 magic here
				var numdon = x;
				
			d3.selectAll(".donbox")
			    .data(numdon)
			    .style("height", "30px").style("margin", 0).style("padding", 0).transition()
			    .style("background-color", function(d) {
			  		return "hsl(" + d*10 + ",100%,50%)";
				})
				.text(function(d) {
        			return d;
   				})
			    .style("width", function(d, i) { return (d)*50 + "px"; });
			};

			function piechart(x,y){
				var w = 500,
				    h = 300,
				    r = Math.min(w, h) / 2;

				var color = d3.scale.ordinal()
				    .range(["#5DFC0A", "#FF3300", "#ff00e8", "#69ff00", "#00FFCC", "#0EEDF1", "#00FFCC", "#FF0066", "#FF944D", "#3366FF"]);
				data = x;
				theirnames= y;

				var vis = d3.select("body")
		        .append("svg:svg")              //create the SVG element inside the <body>
		        .data([data])                   //associate our data with the document
		            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
		            .attr("height", h)
		        .append("svg:g")                //make a group to hold our pie chart
		            .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
		 
		    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
		        .outerRadius(r);
		 
		    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
		 
		    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
		        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
		        .enter()                            
		            .append("svg:g")                
		                .attr("class", "slice");    
		 
		        arcs.append("svg:path")
		                .attr("fill", function(d, i) { return color(i); } ) 
		                .attr("d", arc);                                  
		 
		        arcs.append("svg:text")                                     
		                .attr("transform", function(d) {                    
		                d.innerRadius = 0;
		                d.outerRadius = r;
		                return "translate(" + arc.centroid(d) + ")";        
		            })
		            .attr("text-anchor", "middle")                         
		            .text(function(d, i) { return theirnames[i]; });        
				 
				};



		};
		

		</script>